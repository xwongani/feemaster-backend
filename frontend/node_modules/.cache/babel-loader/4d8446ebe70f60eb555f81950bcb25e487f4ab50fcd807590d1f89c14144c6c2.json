{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const dashboardService = {\n  async getDashboardStats() {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching dashboard stats:', error);\n      throw error;\n    }\n  },\n  async getRecentActivities(limit = 10) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/recent-activities`, {\n        params: {\n          limit\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching recent activities:', error);\n      throw error;\n    }\n  },\n  async getFinancialSummary(dateFrom, dateTo) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/financial-summary`, {\n        params: {\n          date_from: dateFrom,\n          date_to: dateTo\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching financial summary:', error);\n      throw error;\n    }\n  },\n  async getRevenueChartData(period = 'week') {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/revenue-chart`, {\n        params: {\n          period\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching revenue chart data:', error);\n      throw error;\n    }\n  },\n  async getPaymentMethodsChart(dateFrom, dateTo) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/payment-methods-chart`, {\n        params: {\n          date_from: dateFrom,\n          date_to: dateTo\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching payment methods chart:', error);\n      throw error;\n    }\n  },\n  async getGradeDistribution() {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/grade-distribution`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching grade distribution:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","dashboardService","getDashboardStats","response","get","data","error","console","getRecentActivities","limit","params","getFinancialSummary","dateFrom","dateTo","date_from","date_to","getRevenueChartData","period","getPaymentMethodsChart","getGradeDistribution"],"sources":["/home/tulongam/Documents/feemaster/feemaster-backend/frontend/src/services/dashboardService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const dashboardService = {\n  async getDashboardStats() {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching dashboard stats:', error);\n      throw error;\n    }\n  },\n\n  async getRecentActivities(limit = 10) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/recent-activities`, {\n        params: { limit }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching recent activities:', error);\n      throw error;\n    }\n  },\n\n  async getFinancialSummary(dateFrom, dateTo) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/financial-summary`, {\n        params: { date_from: dateFrom, date_to: dateTo }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching financial summary:', error);\n      throw error;\n    }\n  },\n\n  async getRevenueChartData(period = 'week') {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/revenue-chart`, {\n        params: { period }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching revenue chart data:', error);\n      throw error;\n    }\n  },\n\n  async getPaymentMethodsChart(dateFrom, dateTo) {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/payment-methods-chart`, {\n        params: { date_from: dateFrom, date_to: dateTo }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching payment methods chart:', error);\n      throw error;\n    }\n  },\n\n  async getGradeDistribution() {\n    try {\n      const response = await axios.get(`${API_URL}/dashboard/grade-distribution`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching grade distribution:', error);\n      throw error;\n    }\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,MAAMC,gBAAgB,GAAG;EAC9B,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,kBAAkB,CAAC;MAC9D,OAAOM,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,mBAAmBA,CAACC,KAAK,GAAG,EAAE,EAAE;IACpC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,8BAA8B,EAAE;QACzEa,MAAM,EAAE;UAAED;QAAM;MAClB,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,mBAAmBA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAC1C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,8BAA8B,EAAE;QACzEa,MAAM,EAAE;UAAEI,SAAS,EAAEF,QAAQ;UAAEG,OAAO,EAAEF;QAAO;MACjD,CAAC,CAAC;MACF,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMU,mBAAmBA,CAACC,MAAM,GAAG,MAAM,EAAE;IACzC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,0BAA0B,EAAE;QACrEa,MAAM,EAAE;UAAEO;QAAO;MACnB,CAAC,CAAC;MACF,OAAOd,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMY,sBAAsBA,CAACN,QAAQ,EAAEC,MAAM,EAAE;IAC7C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,kCAAkC,EAAE;QAC7Ea,MAAM,EAAE;UAAEI,SAAS,EAAEF,QAAQ;UAAEG,OAAO,EAAEF;QAAO;MACjD,CAAC,CAAC;MACF,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMa,oBAAoBA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,+BAA+B,CAAC;MAC3E,OAAOM,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}